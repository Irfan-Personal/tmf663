// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Shopping Cart -  Customization
 *
 *  The Shopping Cart API provides a standardized mechanism for the management of shopping carts. Including creation, update, retrieval, deletion and notification of event.  Shopping Cart entity is used for the temporarily selection and reservation of product offerings in e-commerce and retail purchase.  Shopping cart supports purchase of both tangible and intangible goods and service (e.g. handset, telecom network service). The charge includes the one-off fee such as the fee for handset and the recurring fee such as the fee of a network service.  Shopping Cart contains list of cart items, a reference to party or party role (e.g. customer) or contact medium in case of unknown customer, In addition the calculated total items price including promotions.   Copyright  TM Forum 2019. All Rights Reserved   
 *
 * API version: 4.0.0
 */

package openapi


import (
	"fmt"
)


// CartItemActionType : action to be performed on the product
type CartItemActionType string

// List of CartItemActionType
const (
	ADD CartItemActionType = "add"
	MODIFY CartItemActionType = "modify"
	DELETE CartItemActionType = "delete"
	NO_CHANGE CartItemActionType = "noChange"
)

// AllowedCartItemActionTypeEnumValues is all the allowed values of CartItemActionType enum
var AllowedCartItemActionTypeEnumValues = []CartItemActionType{
	"add",
	"modify",
	"delete",
	"noChange",
}

// validCartItemActionTypeEnumValue provides a map of CartItemActionTypes for fast verification of use input
var validCartItemActionTypeEnumValues = map[CartItemActionType]struct{}{
	"add": {},
	"modify": {},
	"delete": {},
	"noChange": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CartItemActionType) IsValid() bool {
	_, ok := validCartItemActionTypeEnumValues[v]
	return ok
}

// NewCartItemActionTypeFromValue returns a pointer to a valid CartItemActionType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCartItemActionTypeFromValue(v string) (CartItemActionType, error) {
	ev := CartItemActionType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for CartItemActionType: valid values are %v", v, AllowedCartItemActionTypeEnumValues)
}



// AssertCartItemActionTypeRequired checks if the required fields are not zero-ed
func AssertCartItemActionTypeRequired(obj CartItemActionType) error {
	return nil
}

// AssertCartItemActionTypeConstraints checks if the values respects the defined constraints
func AssertCartItemActionTypeConstraints(obj CartItemActionType) error {
	return nil
}
