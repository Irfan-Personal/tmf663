// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Shopping Cart -  Customization
 *
 *  The Shopping Cart API provides a standardized mechanism for the management of shopping carts. Including creation, update, retrieval, deletion and notification of event.  Shopping Cart entity is used for the temporarily selection and reservation of product offerings in e-commerce and retail purchase.  Shopping cart supports purchase of both tangible and intangible goods and service (e.g. handset, telecom network service). The charge includes the one-off fee such as the fee for handset and the recurring fee such as the fee of a network service.  Shopping Cart contains list of cart items, a reference to party or party role (e.g. customer) or contact medium in case of unknown customer, In addition the calculated total items price including promotions.   Copyright  TM Forum 2019. All Rights Reserved   
 *
 * API version: 4.0.0
 */

package service

import (
	"context"
	"net/http"
	models "tmf663/models"
)



// ShoppingCartAPIRouter defines the required methods for binding the api requests to a responses for the ShoppingCartAPI
// The ShoppingCartAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ShoppingCartAPIServicer to perform the required actions, then write the service results to the http response.
type ShoppingCartAPIRouter interface { 
	CreateShoppingCart(http.ResponseWriter, *http.Request)
	DeleteShoppingCart(http.ResponseWriter, *http.Request)
	ListShoppingCart(http.ResponseWriter, *http.Request)
	PatchShoppingCart(http.ResponseWriter, *http.Request)
	RetrieveShoppingCart(http.ResponseWriter, *http.Request)
}


// ShoppingCartAPIServicer defines the api actions for the ShoppingCartAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ShoppingCartAPIServicer interface { 
	CreateShoppingCart(context.Context, models.ShoppingCartCreate) (models.ImplResponse, error)
	DeleteShoppingCart(context.Context, string) (models.ImplResponse, error)
	ListShoppingCart(context.Context, string, int32, int32) (models.ImplResponse, error)
	PatchShoppingCart(context.Context, string, models.ShoppingCartUpdate) (models.ImplResponse, error)
	RetrieveShoppingCart(context.Context, string, string) (models.ImplResponse, error)
}
